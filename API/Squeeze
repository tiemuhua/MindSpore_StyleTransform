>>> help("mindspore.ops.operations.array_ops.Squeeze")
Help on class Squeeze in mindspore.ops.operations.array_ops:

mindspore.ops.operations.array_ops.Squeeze = class Squeeze(mindspore.ops.primitive.PrimitiveWithInfer)
 |  mindspore.ops.operations.array_ops.Squeeze(*args, **kwargs)
 |
 |  Returns a tensor with the same type but dimensions of 1 are removed based on `axis`.
 |
 |  Note:
 |      The dimension index starts at 0 and must be in the range `[-input.ndim, input.ndim`.
 |
 |  Raises:
 |      ValueError: If the corresponding dimension of the specified axis does not equal to 1.
 |
 |  Args:
 |      axis (Union[int, tuple(int)]): Specifies the dimension indexes of shape to be removed, which will remove
 |          all the dimensions that are equal to 1. If specified, it must be int32 or int64.
 |          Default: (), an empty tuple.
 |
 |  Inputs:
 |      - **input_x** (Tensor) - The shape of tensor is :math:`(x_1, x_2, ..., x_R)`.
 |
 |  Outputs:
 |      Tensor, the shape of tensor is :math:`(x_1, x_2, ..., x_S)`.
 |
 |  Supported Platforms:
 |      ``Ascend`` ``GPU``
 |
 |  Examples:
 |      >>> input_tensor = Tensor(np.ones(shape=[3, 2, 1]), mindspore.float32)
 |      >>> squeeze = ops.Squeeze(2)
 |      >>> output = squeeze(input_tensor)
 |      >>> print(output)
 |      [[1. 1.]
 |       [1. 1.]
 |       [1. 1.]]
